{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Resources": {
        "VaultVPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": {
                    "Ref": "VaultVPCCIDR"
                },
                "InstanceTenancy": "default",
                "EnableDnsSupport": "true",
                "EnableDnsHostnames": "true",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Vault VPC"
                    }
                ]
            }
        },
        "VaultMainSubnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "CidrBlock": {
                    "Ref": "VaultMainSubnetCIDR"
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        "0",
                        {
                            "Fn::GetAZs": {
                                "Ref": "AWS::Region"
                            }
                        }
                    ]
                },
                "VpcId": {
                    "Ref": "VaultVPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Vault Main"
                    }
                ]
            }
        },
        "VaultDRSubnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "CidrBlock": {
                    "Ref": "VaultDRSubnetCIDR"
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        "1",
                        {
                            "Fn::GetAZs": {
                                "Ref": "AWS::Region"
                            }
                        }
                    ]
                },
                "VpcId": {
                    "Ref": "VaultVPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Vault DR"
                    }
                ]
            }
        },
        "ComponentsVPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": {
                    "Ref": "ComponentsVPCCIDR"
                },
                "InstanceTenancy": "default",
                "EnableDnsSupport": "true",
                "EnableDnsHostnames": "true",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Components VPC"
                    }
                ]
            }
        },
        "ComponentsMainSubnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "CidrBlock": {
                    "Ref": "ComponentsMainSubnetCIDR"
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        "0",
                        {
                            "Fn::GetAZs": {
                                "Ref": "AWS::Region"
                            }
                        }
                    ]
                },
                "VpcId": {
                    "Ref": "ComponentsVPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Components Main"
                    }
                ]
            }
        },
        "ComponentsSecondarySubnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "CidrBlock": {
                    "Ref": "ComponentsSecondarySubnetCIDR"
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        "1",
                        {
                            "Fn::GetAZs": {
                                "Ref": "AWS::Region"
                            }
                        }
                    ]
                },
                "VpcId": {
                    "Ref": "ComponentsVPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Components Secondary"
                    }
                ]
            }
        },
        "VaultIGW": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Vault IGW"
                    }
                ]
            }
        },
        "ComponentsIGW": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Components IGW"
                    }
                ]
            }
        },
        "CompToVaultPeer": {
            "Type": "AWS::EC2::VPCPeeringConnection",
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Components to Vault peering"
                    }
                ],
                "VpcId": {
                    "Ref": "ComponentsVPC"
                },
                "PeerVpcId": {
                    "Ref": "VaultVPC"
                }
            }
        },
        "ComponentsNACL": {
            "Type": "AWS::EC2::NetworkAcl",
            "Properties": {
                "VpcId": {
                    "Ref": "ComponentsVPC"
                }
            }
        },
        "VaultNACL": {
            "Type": "AWS::EC2::NetworkAcl",
            "Properties": {
                "VpcId": {
                    "Ref": "VaultVPC"
                }
            }
        },
        "VaultPublicRT": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "VaultVPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Vault Public RT"
                    }
                ]
            }
        },
        "VaultPrivateRT": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "VaultVPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Vault Private RT"
                    }
                ]
            }
        },
        "ComponentsPrivateRT": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "ComponentsVPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Components Private RT"
                    }
                ]
            }
        },
        "ComponentsPublicRT": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "ComponentsVPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Components Public RT"
                    }
                ]
            }
        },
        "VaultSG": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Security group for Vault instances",
                "VpcId": {
                    "Ref": "VaultVPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Vault-SG"
                    }
                ]
            }
        },
        "CPMSG": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Security group for CPM instances",
                "VpcId": {
                    "Ref": "ComponentsVPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "CPM-SG"
                    }
                ]
            }
        },
        "PVWASG": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Security group for PVWA instances",
                "VpcId": {
                    "Ref": "ComponentsVPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "PVWA-SG"
                    }
                ]
            }
        },
        "PSMSG": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Security group for PSM instances",
                "VpcId": {
                    "Ref": "ComponentsVPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "PSM-SG"
                    }
                ]
            }
        },
		"PSMSSHSG": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Security group for PSM SSH Proxy instances",
                "VpcId": {
                    "Ref": "ComponentsVPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "PSM-SSH-SG"
                    }
                ]
            }
        },
        "PrivateLinkVaultSG": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Security group for PrivateLink to access AWS resources",
                "VpcId": {
                    "Ref": "VaultVPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "PrivateLink-Vault-SG"
                    }
                ]
            }
        },
        "PrivateLinkComponentsSG": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Security group for PrivateLink to access AWS resources",
                "VpcId": {
                    "Ref": "ComponentsVPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "PrivateLink-Components-SG"
                    }
                ]
            }
        },
        "VaultAclEntry1": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "CidrBlock": "0.0.0.0/0",
                "Egress": "true",
                "Protocol": "-1",
                "RuleAction": "allow",
                "RuleNumber": "100",
                "NetworkAclId": {
                    "Ref": "VaultNACL"
                }
            }
        },
        "VaultAclEntry2": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "CidrBlock": "0.0.0.0/0",
                "Protocol": "-1",
                "RuleAction": "allow",
                "RuleNumber": "100",
                "NetworkAclId": {
                    "Ref": "VaultNACL"
                }
            }
        },
        "ComponentsAclEntry1": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "CidrBlock": "0.0.0.0/0",
                "Egress": "true",
                "Protocol": "-1",
                "RuleAction": "allow",
                "RuleNumber": "100",
                "NetworkAclId": {
                    "Ref": "ComponentsNACL"
                }
            }
        },
        "ComponentsAclEntry2": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "CidrBlock": "0.0.0.0/0",
                "Protocol": "-1",
                "RuleAction": "allow",
                "RuleNumber": "100",
                "NetworkAclId": {
                    "Ref": "ComponentsNACL"
                }
            }
        },
        "CompMainNACLAssociation": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "ComponentsNACL"
                },
                "SubnetId": {
                    "Ref": "ComponentsMainSubnet"
                }
            }
        },
        "CompSecondaryNACLAssociation": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "ComponentsNACL"
                },
                "SubnetId": {
                    "Ref": "ComponentsSecondarySubnet"
                }
            }
        },
        "VaultMainNACLAssociation": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "VaultNACL"
                },
                "SubnetId": {
                    "Ref": "VaultMainSubnet"
                }
            }
        },
        "VaultDRNACLAssociation": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "VaultNACL"
                },
                "SubnetId": {
                    "Ref": "VaultDRSubnet"
                }
            }
        },
        "VaultGWAttachment": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "VpcId": {
                    "Ref": "VaultVPC"
                },
                "InternetGatewayId": {
                    "Ref": "VaultIGW"
                }
            }
        },
        "ComponentsGWAttachment": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "VpcId": {
                    "Ref": "ComponentsVPC"
                },
                "InternetGatewayId": {
                    "Ref": "ComponentsIGW"
                }
            }
        },
        "VaultNATEIP": {
            "Type": "AWS::EC2::EIP",
            "Properties": {
                "Domain": "vpc"
            }
        },
        "ComponentsNATEIP": {
            "Type": "AWS::EC2::EIP",
            "Properties": {
                "Domain": "vpc"
            }
        },
        "CompMainRTAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {
                    "Ref": "ComponentsPrivateRT"
                },
                "SubnetId": {
                    "Ref": "ComponentsMainSubnet"
                }
            }
        },
        "CompSecondaryRTAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {
                    "Ref": "ComponentsPrivateRT"
                },
                "SubnetId": {
                    "Ref": "ComponentsSecondarySubnet"
                }
            }
        },
        "VaultMainRTAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {
                    "Ref": "VaultPrivateRT"
                },
                "SubnetId": {
                    "Ref": "VaultMainSubnet"
                }
            }
        },
        "VaultDRRTAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {
                    "Ref": "VaultPrivateRT"
                },
                "SubnetId": {
                    "Ref": "VaultDRSubnet"
                }
            }
        },
        "VaultPeerRoute": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "VpcPeeringConnectionId": {
                    "Ref": "CompToVaultPeer"
                },
                "DestinationCidrBlock": {
                    "Ref": "ComponentsVPCCIDR"
                },
                "RouteTableId": {
                    "Ref": "VaultPrivateRT"
                }
            }
        },
        "VaultPublicNATRoute": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "DestinationCidrBlock": "0.0.0.0/0",
                "RouteTableId": {
                    "Ref": "VaultPublicRT"
                },
                "GatewayId": {
                    "Ref": "VaultIGW"
                }
            },
            "DependsOn": "VaultGWAttachment"
        },
        "CompPeerRoute": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "VpcPeeringConnectionId": {
                    "Ref": "CompToVaultPeer"
                },
                "DestinationCidrBlock": {
                    "Ref": "VaultVPCCIDR"
                },
                "RouteTableId": {
                    "Ref": "ComponentsPrivateRT"
                }
            }
        },
        "CompPublicNATRoute": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "DestinationCidrBlock": "0.0.0.0/0",
                "RouteTableId": {
                    "Ref": "ComponentsPublicRT"
                },
                "GatewayId": {
                    "Ref": "ComponentsIGW"
                }
            },
            "DependsOn": "ComponentsGWAttachment"
        },
        "VaultSGIngress1": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "VaultSG"
                },
                "IpProtocol": "tcp",
                "FromPort": "1858",
                "ToPort": "1858",
                "SourceSecurityGroupId": {
                    "Ref": "VaultSG"
                }
            }
        },
        "VaultSGIngress2": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "VaultSG"
                },
                "IpProtocol": "tcp",
                "FromPort": "1858",
                "ToPort": "1858",
                "CidrIp": {
                    "Ref": "ComponentsVPCCIDR"
                }
            }
        },
        "VaultSGIngress3": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "VaultSG"
                },
                "IpProtocol": "icmp",
                "FromPort": "-1",
                "ToPort": "-1",
                "SourceSecurityGroupId": {
                    "Ref": "VaultSG"
                }
            }
        },
        "VaultSGEgress1": {
            "Type": "AWS::EC2::SecurityGroupEgress",
            "Properties": {
                "GroupId": {
                    "Ref": "VaultSG"
                },
                "IpProtocol": "tcp",
                "FromPort": "1858",
                "ToPort": "1858",
                "DestinationSecurityGroupId": {
                    "Ref": "VaultSG"
                }
            }
        },
        "VaultSGEgress2": {
            "Type": "AWS::EC2::SecurityGroupEgress",
            "Properties": {
                "GroupId": {
                    "Ref": "VaultSG"
                },
                "IpProtocol": "icmp",
                "FromPort": "-1",
                "ToPort": "-1",
                "DestinationSecurityGroupId": {
                    "Ref": "VaultSG"
                }
            }
        },
        "VaultSGEgress3": {
            "Type": "AWS::EC2::SecurityGroupEgress",
            "Properties": {
                "GroupId": {
                    "Ref": "VaultSG"
                },
                "IpProtocol": "tcp",
                "FromPort": "443",
                "ToPort": "443",
                "CidrIp": "0.0.0.0/0"
            }
        },
        "CPMSGIngress1": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "CPMSG"
                },
                "IpProtocol": "tcp",
                "FromPort": "3389",
                "ToPort": "3389",
                "CidrIp": {
                    "Ref": "AdministrativeAccessCIDR"
                }
            }
        },
        "CPMSGEgress1": {
            "Type": "AWS::EC2::SecurityGroupEgress",
            "Properties": {
                "GroupId": {
                    "Ref": "CPMSG"
                },
                "IpProtocol": "tcp",
                "FromPort": "1858",
                "ToPort": "1858",
                "CidrIp": {
                    "Ref": "VaultVPCCIDR"
                }
            }
        },
        "CPMSGEgress2": {
            "Type": "AWS::EC2::SecurityGroupEgress",
            "Properties": {
                "GroupId": {
                    "Ref": "CPMSG"
                },
                "IpProtocol": "tcp",
                "FromPort": "443",
                "ToPort": "443",
                "CidrIp": "0.0.0.0/0"
            }
        },
        "PSMSGIngress1": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "PSMSG"
                },
                "IpProtocol": "tcp",
                "FromPort": "3389",
                "ToPort": "3389",
                "CidrIp": {
                    "Ref": "AdministrativeAccessCIDR"
                }
            }
        },
        "PSMSGIngress2": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "PSMSG"
                },
                "IpProtocol": "tcp",
                "FromPort": "3389",
                "ToPort": "3389",
                "CidrIp": {
                    "Ref": "UsersAccessCIDR"
                }
            }
        },
        "PSMSGEgress1": {
            "Type": "AWS::EC2::SecurityGroupEgress",
            "Properties": {
                "GroupId": {
                    "Ref": "PSMSG"
                },
                "IpProtocol": "tcp",
                "FromPort": "22",
                "ToPort": "22",
                "CidrIp": "0.0.0.0/0"
            }
        },
        "PSMSGEgress2": {
            "Type": "AWS::EC2::SecurityGroupEgress",
            "Properties": {
                "GroupId": {
                    "Ref": "PSMSG"
                },
                "IpProtocol": "tcp",
                "FromPort": "1858",
                "ToPort": "1858",
                "CidrIp": {
                    "Ref": "VaultVPCCIDR"
                }
            }
        },
        "PSMSGEgress3": {
            "Type": "AWS::EC2::SecurityGroupEgress",
            "Properties": {
                "GroupId": {
                    "Ref": "PSMSG"
                },
                "IpProtocol": "tcp",
                "FromPort": "3389",
                "ToPort": "3389",
                "CidrIp": "0.0.0.0/0"
            }
        },
        "PSMSGEgress4": {
            "Type": "AWS::EC2::SecurityGroupEgress",
            "Properties": {
                "GroupId": {
                    "Ref": "PSMSG"
                },
                "IpProtocol": "tcp",
                "FromPort": "443",
                "ToPort": "443",
                "CidrIp": "0.0.0.0/0"
            }
        },
		"PSMSSHSGIngress1": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "PSMSSHSG"
                },
                "IpProtocol": "tcp",
                "FromPort": "22",
                "ToPort": "22",
                "CidrIp": {
                    "Ref": "AdministrativeAccessCIDR"
                }
            }
        },
        "PSMSSHSGIngress2": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "PSMSSHSG"
                },
                "IpProtocol": "tcp",
                "FromPort": "22",
                "ToPort": "22",
                "CidrIp": {
                    "Ref": "UsersAccessCIDR"
                }
            }
        },
		"PSMSSHSGEgress1": {
            "Type": "AWS::EC2::SecurityGroupEgress",
            "Properties": {
                "GroupId": {
                    "Ref": "PSMSSHSG"
                },
                "IpProtocol": "tcp",
                "FromPort": "22",
                "ToPort": "22",
                "CidrIp": "0.0.0.0/0"
            }
        },
		"PSMSSHSGEgress2": {
            "Type": "AWS::EC2::SecurityGroupEgress",
            "Properties": {
                "GroupId": {
                    "Ref": "PSMSSHSG"
                },
                "IpProtocol": "tcp",
                "FromPort": "1858",
                "ToPort": "1858",
                "CidrIp": {
                    "Ref": "VaultVPCCIDR"
                }
            }
        },
		"PSMSSHSGEgress3": {
            "Type": "AWS::EC2::SecurityGroupEgress",
            "Properties": {
                "GroupId": {
                    "Ref": "PSMSSHSG"
                },
                "IpProtocol": "tcp",
                "FromPort": "443",
                "ToPort": "443",
                "CidrIp": "0.0.0.0/0"
            }
        },
        "PVWASGIngress1": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "PVWASG"
                },
                "IpProtocol": "tcp",
                "FromPort": "443",
                "ToPort": "443",
                "CidrIp": {
                    "Ref": "UsersAccessCIDR"
                }
            }
        },
        "PVWASGIngress2": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "PVWASG"
                },
                "IpProtocol": "tcp",
                "FromPort": "3389",
                "ToPort": "3389",
                "CidrIp": {
                    "Ref": "AdministrativeAccessCIDR"
                }
            }
        },
        "PVWASGEgress1": {
            "Type": "AWS::EC2::SecurityGroupEgress",
            "Properties": {
                "GroupId": {
                    "Ref": "PVWASG"
                },
                "IpProtocol": "tcp",
                "FromPort": "1858",
                "ToPort": "1858",
                "CidrIp": {
                    "Ref": "VaultVPCCIDR"
                }
            }
        },
        "PVWASGEgress2": {
            "Type": "AWS::EC2::SecurityGroupEgress",
            "Properties": {
                "GroupId": {
                    "Ref": "PVWASG"
                },
                "IpProtocol": "tcp",
                "FromPort": "443",
                "ToPort": "443",
                "CidrIp": "0.0.0.0/0"
            }
        },
        "PrivateLinkVaultSGIngress1": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "PrivateLinkVaultSG"
                },
                "IpProtocol": "tcp",
                "FromPort": "443",
                "ToPort": "443",
                "CidrIp": "0.0.0.0/0"
            }
        },
        "PrivateLinkVaultSGEgress1": {
            "Type": "AWS::EC2::SecurityGroupEgress",
            "Properties": {
                "GroupId": {
                    "Ref": "PrivateLinkVaultSG"
                },
                "IpProtocol": "tcp",
                "FromPort": "443",
                "ToPort": "443",
                "CidrIp": "0.0.0.0/0"
            }
        },
        "PrivateLinkComponentsSGIngress1": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "PrivateLinkComponentsSG"
                },
                "IpProtocol": "tcp",
                "FromPort": "443",
                "ToPort": "443",
                "CidrIp": "0.0.0.0/0"
            }
        },
        "PrivateLinkComponentsSGEgress1": {
            "Type": "AWS::EC2::SecurityGroupEgress",
            "Properties": {
                "GroupId": {
                    "Ref": "PrivateLinkComponentsSG"
                },
                "IpProtocol": "tcp",
                "FromPort": "443",
                "ToPort": "443",
                "CidrIp": "0.0.0.0/0"
            }
        },
        "VaultS3Endpoint" : {
            "Type" : "AWS::EC2::VPCEndpoint",
            "Properties" : {
                "PolicyDocument" : {
                    "Version":"2012-10-17",
                    "Statement":[{
                        "Effect":"Allow",
                        "Principal": "*",
                        "Action":["s3:*"],
                        "Resource":[{
                             "Fn::Sub":"arn:${AWS::Partition}:s3:::*"
                        }]
                    }]
                },
                "ServiceName" : { "Fn::Join": [ "", [ "com.amazonaws.", { "Ref": "AWS::Region" }, ".s3" ] ] },
                "VpcId" : {"Ref" : "VaultVPC"},
                "RouteTableIds": [{"Ref": "VaultPrivateRT"}]
            }
        },
        "VaultCFNEndpoint" : {
            "Type" : "AWS::EC2::VPCEndpoint",
            "Properties" : {
                "VpcEndpointType": "Interface",
                "ServiceName" : { "Fn::Join": [ "", [ "com.amazonaws.", { "Ref": "AWS::Region" }, ".cloudformation" ] ] },
                "VpcId" : {"Ref" : "VaultVPC"},
                "SubnetIds" : [{"Ref" : "VaultMainSubnet"}, {"Ref" : "VaultDRSubnet"}],
                "SecurityGroupIds": [{"Ref" :"PrivateLinkVaultSG"}],
                "PrivateDnsEnabled" : "true"
            }
        },
        "VaultSSMEndpoint" : {
            "Type" : "AWS::EC2::VPCEndpoint",
            "Properties" : {
                "VpcEndpointType": "Interface",
                "ServiceName" : { "Fn::Join": [ "", [ "com.amazonaws.", { "Ref": "AWS::Region" }, ".ssm" ] ] },
                "VpcId" : {"Ref" : "VaultVPC"},
                "SubnetIds" : [{"Ref" : "VaultMainSubnet"}, {"Ref" : "VaultDRSubnet"}],
                "SecurityGroupIds": [{"Ref" :"PrivateLinkVaultSG"}],
                "PrivateDnsEnabled" : "true"
            }
        },
        "VaultKMSEndpoint" : {
            "Type" : "AWS::EC2::VPCEndpoint",
            "Properties" : {
                "VpcEndpointType": "Interface",
                "ServiceName" : { "Fn::Join": [ "", [ "com.amazonaws.", { "Ref": "AWS::Region" }, ".kms" ] ] },
                "VpcId" : {"Ref" : "VaultVPC"},
                "SubnetIds" : [{"Ref" : "VaultMainSubnet"}, {"Ref" : "VaultDRSubnet"}],
                "SecurityGroupIds": [{"Ref" :"PrivateLinkVaultSG"}],
                "PrivateDnsEnabled" : "true"
            }
        },
        "VaultCWEndpoint" : {
            "Type" : "AWS::EC2::VPCEndpoint",
            "Properties" : {
                "VpcEndpointType": "Interface",
                "ServiceName" : { "Fn::Join": [ "", [ "com.amazonaws.", { "Ref": "AWS::Region" }, ".logs" ] ] },
                "VpcId" : {"Ref" : "VaultVPC"},
                "SubnetIds" : [{"Ref" : "VaultMainSubnet"}, {"Ref" : "VaultDRSubnet"}],
                "SecurityGroupIds": [{"Ref" :"PrivateLinkVaultSG"}],
                "PrivateDnsEnabled" : "true"
            }
        },
        "ComponentsCFNEndpoint" : {
            "Type" : "AWS::EC2::VPCEndpoint",
            "Properties" : {
                "VpcEndpointType": "Interface",
                "ServiceName" : { "Fn::Join": [ "", [ "com.amazonaws.", { "Ref": "AWS::Region" }, ".cloudformation" ] ] },
                "VpcId" : {"Ref" : "ComponentsVPC"},
                "SubnetIds" : [{"Ref" : "ComponentsMainSubnet"}, {"Ref" : "ComponentsSecondarySubnet"}],
                "SecurityGroupIds": [{"Ref" :"PrivateLinkComponentsSG"}],
                "PrivateDnsEnabled" : "true"
            }
        },
        "ComponentsSSMEndpoint" : {
            "Type" : "AWS::EC2::VPCEndpoint",
            "Properties" : {
                "VpcEndpointType": "Interface",
                "ServiceName" : { "Fn::Join": [ "", [ "com.amazonaws.", { "Ref": "AWS::Region" }, ".ssm" ] ] },
                "VpcId" : {"Ref" : "ComponentsVPC"},
                "SubnetIds" : [{"Ref" : "ComponentsMainSubnet"}, {"Ref" : "ComponentsSecondarySubnet"}],
                "SecurityGroupIds": [{"Ref" :"PrivateLinkComponentsSG"}],
                "PrivateDnsEnabled" : "true"
            }
        },
        "ComponentsCWEndpoint" : {
            "Type" : "AWS::EC2::VPCEndpoint",
            "Properties" : {
                "VpcEndpointType": "Interface",
                "ServiceName" : { "Fn::Join": [ "", [ "com.amazonaws.", { "Ref": "AWS::Region" }, ".logs" ] ] },
                "VpcId" : {"Ref" : "ComponentsVPC"},
                "SubnetIds" : [{"Ref" : "ComponentsMainSubnet"}, {"Ref" : "ComponentsSecondarySubnet"}],
                "SecurityGroupIds": [{"Ref" :"PrivateLinkComponentsSG"}],
                "PrivateDnsEnabled" : "true"
            }
        }
    },
    "Description": "This template will create the required network environment for CyberArk PAS products. **WARNING** You will be billed for the AWS resources used if you create a stack from this template",
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "CyberArk Network Configuration"
                    },
                    "Parameters": [
                        "VaultVPCCIDR",
                        "VaultMainSubnetCIDR",
                        "VaultDRSubnetCIDR",
                        "ComponentsVPCCIDR",
                        "ComponentsMainSubnetCIDR",
                        "ComponentsSecondarySubnetCIDR"
                    ]
                },
                {
                    "Label": {
                        "default": "External Access"
                    },
                    "Parameters": [
                        "UsersAccessCIDR",
                        "AdministrativeAccessCIDR"
                    ]
                }
            ],
            "ParameterLabels": {
                "VaultVPCCIDR": {
                    "default": "Vault VPC CIDR"
                },
                "VaultMainSubnetCIDR": {
                    "default": "Vault Main Subnet CIDR"
                },
                "VaultDRSubnetCIDR": {
                    "default": "Vault DR Subnet CIDR"
                },
                "ComponentsVPCCIDR": {
                    "default": "Components VPC CIDR"
                },
                "ComponentsMainSubnetCIDR": {
                    "default": "Components Main Subnet CIDR"
                },
                "ComponentsSecondarySubnetCIDR": {
                    "default": "Components Secondary Subnet CIDR"
                },
                "UsersAccessCIDR": {
                    "default": "Users Access CIDR"
                },
                "AdministrativeAccessCIDR": {
                    "default": "Administrative Access CIDR"
                }
            }
        }
    },
    "Parameters": {
        "VaultVPCCIDR": {
            "Description": "IPv4 address range for the Vault VPC",
            "Type": "String",
            "MinLength": "9",
            "MaxLength": "18",
            "Default": "10.0.0.0/16",
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "Must be a valid IP CIDR range of the form x.x.x.x/x."
        },
        "VaultMainSubnetCIDR": {
            "Description": "IPv4 address range for the main Vault subnet",
            "Type": "String",
            "MinLength": "9",
            "MaxLength": "18",
            "Default": "10.0.1.0/28",
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "Must be a valid IP CIDR range of the form x.x.x.x/x."
        },
        "VaultDRSubnetCIDR": {
            "Description": "IPv4 address range for the Vault DR subnet",
            "Type": "String",
            "MinLength": "9",
            "MaxLength": "18",
            "Default": "10.0.2.0/28",
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "Must be a valid IP CIDR range of the form x.x.x.x/x."
        },
        "ComponentsVPCCIDR": {
            "Description": "IPv4 address range for the Components VPC",
            "Type": "String",
            "MinLength": "9",
            "MaxLength": "18",
            "Default": "10.10.0.0/16",
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "Must be a valid IP CIDR range of the form x.x.x.x/x."
        },
        "ComponentsMainSubnetCIDR": {
            "Description": "IPv4 address range for the first private Components subnet",
            "Type": "String",
            "MinLength": "9",
            "MaxLength": "18",
            "Default": "10.10.1.0/26",
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "Must be a valid IP CIDR range of the form x.x.x.x/x."
        },
        "ComponentsSecondarySubnetCIDR": {
            "Description": "IPv4 address range for the second private Components subnet",
            "Type": "String",
            "MinLength": "9",
            "MaxLength": "18",
            "Default": "10.10.2.0/26",
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "Must be a valid IP CIDR range of the form x.x.x.x/x."
        },
        "UsersAccessCIDR": {
            "Description": "Allowed IPv4 address range for users access to CyberArk components",
            "Type": "String",
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "ConstraintDescription": "Must be a valid IP CIDR range of the form x.x.x.x/x."
        },
        "AdministrativeAccessCIDR": {
            "Description": "Allowed IPv4 address range for Remote Desktop administrative access to CyberArk instances",
            "Type": "String",
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "ConstraintDescription": "Must be a valid IP CIDR range of the form x.x.x.x/x."
        }
    }
}

